# -*- coding: utf-8 -*-
"""AluraStoreLatam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uoAQVdZmW3KL2fdWtqfgclf6h1wsrIDA

### Importación de datos
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

tienda = pd.read_csv(url)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

tienda.head()
tienda_completa = pd.concat([tienda, tienda2, tienda3, tienda4], ignore_index=True)

# Display the first few rows of the combined dataframe to confirm
print("Primeras 5 filas del DataFrame combinado:")
print(tienda_completa.head())
print("\nInformación del DataFrame combinado:")
print(tienda_completa.info())

"""#1. Análisis de facturación


"""

tienda_completa['Fecha de Compra'] = pd.to_datetime(tienda_completa['Fecha de Compra'], format='%d/%m/%Y')

# Total_Venta' (Precio + Costo de envío)
tienda_completa['Total_Venta'] = tienda_completa['Precio'] + tienda_completa['Costo de envío']

# Total revenue
total_revenue = tienda_completa['Total_Venta'].sum()
print(f"Total de facturación: ${total_revenue:,.2f}\n")

# Average transaction value
average_transaction_value = tienda_completa['Total_Venta'].mean()
print(f"Valor promedio de transacción: ${average_transaction_value:,.2f}\n")

# Payment method with the highest revenue
revenue_by_payment_method = tienda_completa.groupby('Método de pago')['Total_Venta'].sum().sort_values(ascending=False)
print("Facturación por método de pago:\n", revenue_by_payment_method)
print(f"\nMétodo de pago con mayor facturación: {revenue_by_payment_method.index[0]} con ${revenue_by_payment_method.iloc[0]:,.2f}")

"""# 2. Ventas por categoría"""

# Calculate total sales for each product category
sales_by_category = tienda_completa.groupby('Categoría del Producto')['Total_Venta'].sum().sort_values(ascending=False)
print("Ventas totales por categoría de producto:\n", sales_by_category)

# Top 3 best-selling categories
top_3_categories = sales_by_category.head(3)
print("\nTop 3 categorías de productos más vendidas:\n", top_3_categories)

"""# 3. Calificación promedio de la tienda

"""

# Overall average rating
overall_average_rating = tienda_completa['Calificación'].mean()
print(f"Calificación promedio general de la tienda: {overall_average_rating:.2f}\n")

# Average rating per product category
average_rating_by_category = tienda_completa.groupby('Categoría del Producto')['Calificación'].mean().sort_values(ascending=False)
print("Calificación promedio por categoría de producto:\n", average_rating_by_category)

"""# 4. Productos más y menos vendidos"""

most_sold_products = tienda_completa['Producto'].value_counts().head(5)
print("Top 5 productos más vendidos por cantidad:\n", most_sold_products)

least_sold_products = tienda_completa['Producto'].value_counts().tail(5)
print("\nTop 5 productos menos vendidos por cantidad:\n", least_sold_products)

"""# 5. Envío promedio por tienda"""

average_shipping_by_location = tienda_completa.groupby('Lugar de Compra')['Costo de envío'].mean().sort_values(ascending=False)
print("Costo de envío promedio por Lugar de Compra:\n", average_shipping_by_location)